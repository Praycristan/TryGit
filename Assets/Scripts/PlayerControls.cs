//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Players Top View"",
            ""id"": ""bf52ecb7-a1b7-47d8-8cbc-17511d9012a9"",
            ""actions"": [
                {
                    ""name"": ""Walking "",
                    ""type"": ""Value"",
                    ""id"": ""8f48feb3-3a0d-4ba1-857f-42281bac8490"",
                    ""expectedControlType"": ""Dpad"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector Analog"",
                    ""id"": ""99512c9f-0d12-43e5-9ae1-585bc5219fc5"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a3e3ec67-9376-4ad8-8f5d-538d6d795c56"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3e7fd95d-4f70-4f2c-b895-f7e40dc70943"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b467bf84-9343-4f62-b05f-978900c28d36"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f3ffbbff-e3be-4ce7-9d9d-f3e9bf88372b"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector Keyboard"",
                    ""id"": ""edbe3c28-3af8-415d-8bd9-d6ec0657ac44"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""140028d3-3351-48b8-979a-2c7a17ec5ab6"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""81b50265-7737-4ab1-a49d-162629dd3d8f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c9a28f6b-646d-48e3-85f4-f08e3be46b27"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""aa944c64-dd2b-4281-a009-15e3bdd20d35"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector Dpad"",
                    ""id"": ""76e327bb-1234-45ba-a5cf-4d0f349670ed"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3f25afc0-28c3-4bf5-b1a5-6c2dfdb6152a"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0ff3d4eb-68bf-4654-a334-9ac78fafe2ce"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7b529254-02c0-4f67-ad87-17553cffebaa"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b7e585ca-8662-4b26-82ec-40bebcd38928"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Players Sidescroll Battle"",
            ""id"": ""6dec6f4a-10c1-47de-b099-def6d12b6a2d"",
            ""actions"": [
                {
                    ""name"": ""Walking "",
                    ""type"": ""Value"",
                    ""id"": ""767a33c9-41c0-47b4-9c10-3a9e4627475d"",
                    ""expectedControlType"": ""Dpad"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector Analog"",
                    ""id"": ""d7979de5-6e1b-4951-8a55-4f26f724a812"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""down"",
                    ""id"": ""494059a7-37b6-4b95-acda-edd194931316"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6cbcf92a-709f-4004-9478-1720a226f125"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8cfb5fff-1c24-43c2-a8d4-df3b4d7ae97a"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector Keyboard"",
                    ""id"": ""b861dc57-dc10-41c4-8753-7d1e28bdeb71"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""down"",
                    ""id"": ""676fda64-5fcb-4237-8233-6deafe94ea8c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6ed1d424-045a-4676-b04b-31ae9251fca1"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f4855d1b-0752-46c5-9e46-04b9a11aaa25"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector Dpad"",
                    ""id"": ""0f8c2dc3-786e-4e35-bf2c-3dba41c1c7fd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""down"",
                    ""id"": ""dbc819a7-664e-49a1-9996-e61538881a31"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""52f660c2-8ddf-452b-880b-12a9a6edf515"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ddc22129-d8a4-450a-910a-074f591c1556"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Players Shop"",
            ""id"": ""2f670cfe-8ee5-4274-94e7-6b0722650a58"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""f0c9ff0a-e01e-4fd3-a691-a88fee247e0d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6b32ed03-bbb2-4f66-a6ab-df7ff041f31c"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Players Top View
        m_PlayersTopView = asset.FindActionMap("Players Top View", throwIfNotFound: true);
        m_PlayersTopView_Walking = m_PlayersTopView.FindAction("Walking ", throwIfNotFound: true);
        // Players Sidescroll Battle
        m_PlayersSidescrollBattle = asset.FindActionMap("Players Sidescroll Battle", throwIfNotFound: true);
        m_PlayersSidescrollBattle_Walking = m_PlayersSidescrollBattle.FindAction("Walking ", throwIfNotFound: true);
        // Players Shop
        m_PlayersShop = asset.FindActionMap("Players Shop", throwIfNotFound: true);
        m_PlayersShop_Newaction = m_PlayersShop.FindAction("New action", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Players Top View
    private readonly InputActionMap m_PlayersTopView;
    private IPlayersTopViewActions m_PlayersTopViewActionsCallbackInterface;
    private readonly InputAction m_PlayersTopView_Walking;
    public struct PlayersTopViewActions
    {
        private @PlayerControls m_Wrapper;
        public PlayersTopViewActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Walking => m_Wrapper.m_PlayersTopView_Walking;
        public InputActionMap Get() { return m_Wrapper.m_PlayersTopView; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayersTopViewActions set) { return set.Get(); }
        public void SetCallbacks(IPlayersTopViewActions instance)
        {
            if (m_Wrapper.m_PlayersTopViewActionsCallbackInterface != null)
            {
                @Walking.started -= m_Wrapper.m_PlayersTopViewActionsCallbackInterface.OnWalking;
                @Walking.performed -= m_Wrapper.m_PlayersTopViewActionsCallbackInterface.OnWalking;
                @Walking.canceled -= m_Wrapper.m_PlayersTopViewActionsCallbackInterface.OnWalking;
            }
            m_Wrapper.m_PlayersTopViewActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Walking.started += instance.OnWalking;
                @Walking.performed += instance.OnWalking;
                @Walking.canceled += instance.OnWalking;
            }
        }
    }
    public PlayersTopViewActions @PlayersTopView => new PlayersTopViewActions(this);

    // Players Sidescroll Battle
    private readonly InputActionMap m_PlayersSidescrollBattle;
    private IPlayersSidescrollBattleActions m_PlayersSidescrollBattleActionsCallbackInterface;
    private readonly InputAction m_PlayersSidescrollBattle_Walking;
    public struct PlayersSidescrollBattleActions
    {
        private @PlayerControls m_Wrapper;
        public PlayersSidescrollBattleActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Walking => m_Wrapper.m_PlayersSidescrollBattle_Walking;
        public InputActionMap Get() { return m_Wrapper.m_PlayersSidescrollBattle; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayersSidescrollBattleActions set) { return set.Get(); }
        public void SetCallbacks(IPlayersSidescrollBattleActions instance)
        {
            if (m_Wrapper.m_PlayersSidescrollBattleActionsCallbackInterface != null)
            {
                @Walking.started -= m_Wrapper.m_PlayersSidescrollBattleActionsCallbackInterface.OnWalking;
                @Walking.performed -= m_Wrapper.m_PlayersSidescrollBattleActionsCallbackInterface.OnWalking;
                @Walking.canceled -= m_Wrapper.m_PlayersSidescrollBattleActionsCallbackInterface.OnWalking;
            }
            m_Wrapper.m_PlayersSidescrollBattleActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Walking.started += instance.OnWalking;
                @Walking.performed += instance.OnWalking;
                @Walking.canceled += instance.OnWalking;
            }
        }
    }
    public PlayersSidescrollBattleActions @PlayersSidescrollBattle => new PlayersSidescrollBattleActions(this);

    // Players Shop
    private readonly InputActionMap m_PlayersShop;
    private IPlayersShopActions m_PlayersShopActionsCallbackInterface;
    private readonly InputAction m_PlayersShop_Newaction;
    public struct PlayersShopActions
    {
        private @PlayerControls m_Wrapper;
        public PlayersShopActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Newaction => m_Wrapper.m_PlayersShop_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_PlayersShop; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayersShopActions set) { return set.Get(); }
        public void SetCallbacks(IPlayersShopActions instance)
        {
            if (m_Wrapper.m_PlayersShopActionsCallbackInterface != null)
            {
                @Newaction.started -= m_Wrapper.m_PlayersShopActionsCallbackInterface.OnNewaction;
                @Newaction.performed -= m_Wrapper.m_PlayersShopActionsCallbackInterface.OnNewaction;
                @Newaction.canceled -= m_Wrapper.m_PlayersShopActionsCallbackInterface.OnNewaction;
            }
            m_Wrapper.m_PlayersShopActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Newaction.started += instance.OnNewaction;
                @Newaction.performed += instance.OnNewaction;
                @Newaction.canceled += instance.OnNewaction;
            }
        }
    }
    public PlayersShopActions @PlayersShop => new PlayersShopActions(this);
    public interface IPlayersTopViewActions
    {
        void OnWalking(InputAction.CallbackContext context);
    }
    public interface IPlayersSidescrollBattleActions
    {
        void OnWalking(InputAction.CallbackContext context);
    }
    public interface IPlayersShopActions
    {
        void OnNewaction(InputAction.CallbackContext context);
    }
}
